VERSION INFORMATION<LF>
===================<LF>
Below is a description of what each version of JavaPEG has been able to do.
<LF>
<LF>
Version 2.2<LF>
===========<LF>
Released 2009-08-02 Version 2.2 of JavaPEG has got a new layout of the graphical user interface. From now on it can be resized and thereby can be made to use the entire screen of a high resolution monitor. All major panels can be adjusted regarding their size and they can also be completely hidden to free up space for the nonhidden panels. The size of each panel is saved between application sessions.
<LF>
<LF>
The second major difference is that the source selection window has been removed and has been replaced with an instant available tree structure displaying the file system. 
<LF>
<LF>
There is also an added meta data panel which is showing detailed meta data for the images. The meta data is loaded and displayed when a thumb nail images is marked.
<LF>
<LF>
There is a new variable available, "Original file name", for the file name template. It will insert the original file name of each image at the positions of all occurences of the variable in the template when the rename process takes place.
<LF>
<LF>
A statusbar has been added to the bottom of the user interface. That statusbar displays selected path and the amount of images in that directory and how many columns and rows that is displayed in the thumb nail grid.
<LF>
<LF>
Besides from above JavaPEG 2.2 has been given an entire new mode of operation. It is from now on possible, not only to rename images but also, to create image lists (slide shows). It is possible to save lists in an internal JavaPEG format and then load them later on for further processing. It is also possible to export image lists to image list formats supported by third party software. In version 2.2 of JavaPEG there is support for exporting lists to PolyView and IrfanView format.
<LF>
<LF>
Version 2.1<LF>
===========<LF>
Released 2009-05-21 Version 2.1 of JavaPEG has got detailed information added to the rename process progress window about the JPEG rename process, process of copy any non JPEG files and the file integrity after the rename and file copy.
<LF>
<LF>
JavaPEG can from version 2.1, do an optional (configurable) version check at application start. It does it against an version server. If there is a new version available, the changes for that version compared to the current used version is presented. It is also possible to download the new version through JavaPEG
<LF>
<LF>
If there is an layout.xml file that defines how the thumb nail overview shall look like which have been defined by the JavaPEG user, then this file will be validated for validity against a schema.
<LF>
<LF>
Version 2.0<LF>
===========<LF>
Released 2009-05-05 Version 2.0 of JavaPEG is more or less a complete rewrite compared to the 1.x versions. Despite this the concept is still the same: A simple to use and secure tool to rename images created by a digital camera.
<LF>
<LF>
The application still need a path to a source directory with images. When the source directory has been chosen the destination directory must be selected. After this a file name and sub directory template must be provided. As a last step before the actual rename process can begin, it is possible to select whether a thumb nail overview shall be created or not.
<LF>
<LF>
A major difference with this version compared to the 1.x versions it that this version only supports renaming of copied image files. The reason for this is to minimize the risk for data losses.
<LF>
<LF>
New functionality in this version:
<LF>
<LF>
The file chooser used to find the directory containing the images that shall be renamed will show thumb nail versions of the images in the selected directory. This will ease up the work with finding the images to rename.
<LF>
<LF>
Thumb nails will be shown in the main application window, when a directory with images has been selected in the file chooser and the Ok button has been clicked. 
<LF>
<LF>
There is an instant preview of the resulting file names when the templates for either the file name or the sub directory has been changed.
<LF>
<LF>
There is an instant errormessage shown if an illegal variable or an illegal character is used in the templates or the maximum path length has been exceeded for the resulting file names in the selected destination directory.
<LF>
<LF>
Before the rename process starts there is a validation process which makes sure that: all input is valid, that maximum path length has not been exceeded, that the sub directory does not exist in the destination directory, that there is enough space to store the copied files in the destination directory and that it is possible to create all the files in the destination directory that exists in the source directory.
<LF>
<LF>
A validation takes place after the rename process has finished. This validation will check that all files that has been copied from the source directory to the destination directory has been given the correct name and has the exact same content.
<LF>
<LF>
Under the rename process, there is a status window showing the progress of the rename process.
<LF>
<LF>
It is possible to change the look and layout of the optional thumb nail overview.
<LF>
<LF>
For potential error that can occur, there is logging to file.
<LF>
<LF>
Version 1.01<LF>
============<LF>
Released 2007-02-02: Version 1.01 of JavaPEG is a pure bug fix version. It corrects incorrect behavior in rename engine and a problem with wrong error message.
<LF>
<LF>
The program hang if a dot was present as first or last character in file name template or sub folder name template. The exact same problem was also present if there was white spaces first or last in templates. Besides from this there was a correction of two error messages which was mixed up in the English language file.
<LF>
<LF>
Version 1.0<LF>
===========<LF>
Released 2006-11-27: Version 1.0 of JavaPEG has the possibility to rename image files of type jpeg if they have embedded Exif-information.
<LF>
<LF>
The program will rename the files according to a, in the field "FILENAME TEMPLATE", by the user, given template. There is a couple of variables available and they can be found in the window with heading "VARABLES".
<LF>
<LF>
The user has the possibility to choose whether to rename the original files or copies of them, which will be saved in the same directory as original files, or in another directory or in a sub directory in another directory than original directory. It is possible to give the sub directory a name in the same way as the files, in other words: by using variables. 
<LF>
<LF>
Before rename process starts the user has the possibility to choose whether JavaPEG shall create any thumb nails of renamed images. If there will be any thumb nails there will also be a HTML file created, which will show all the created thumb nails and the thumb nails will link to the full size images. 
<LF>
<LF>
As last option, it is also possible to instruct the program to open destination directory after finished rename process.
