***************************************************************************
*                              J a v a P E G                              * 
***************************************************************************
*                  V E R S I O N   I N F O R M A T I O N                  *
***************************************************************************
 
 + = Additions since previous version
 ! = Bug fixes since previous version
 ~ = Changes   since previous version
 
 3.0 (2011-xx-xx)
 
 + Possible to reorder columns and sort the rows by any column in the METADATA
   and PREVIEW tables in the RENAME IMAGES mode. 
 
 + If the Automatic Image Resize button is selected in the ImageViewer then a
   deselection of this button will resize a loaded image to the original size.
 
 + If an image thumbnail is double clicked when JavaPEG is in 
   SEARCH / VIEW IMAGE mode the image will be added to the end of the image 
   list. If the Image Viewer is displayed the image will also be added to the 
   collection of viewable images in the Image Viewer.   
 
 + An image tagging functionality has been implemented. It is possible to tag
   an image with an unlimited amount of categories, set an image rating between
   1 and 5 and to enter a comment. This meta data and additional image specific
   data, such as ISO rating, exposure data and time, shutterspeed,... is 
   persistently stored in xml files.
      
 + A search engine that searches in an in memory database compiled by all 
   existing xml meta data files mentioned in the section above.   
 
 + It is possible to have the images automatically rotated in the ImageViewer.
   The rotation is done according to the stored orientation meta data in each
   image. If there is no such information stored in the image, the image can
   not be rotated automatically.
 
 + It is possible to rotate the images in the ImageViewer, counterwise or 
   clockwise in steps of 90 degrees.
 
 + It is possible to set the detail level of the thumbnail tooltips. Three 
   levels exists: Disabled, Enabled and Extended, where Disabled; means no
   tooltips at all, Enabled; the file name of the image is shown and Extended;
   is the file name and some other meta data of the image (the same as it was
   in the tooltip in earlier versions of JavaPEG.
 
 + Added the possibility to copy image(s) to system clipboard. It is either
   possible to copy one image to clipboard or all images in a selected directory
   via popup menu or to copy a list of images at once, by populating an image 
   list in the SEARCH / VIEW IMAGES tab and click on the copy image list to 
   system clipboard button. 
 
 + If a JPEG file is missing an embedded thumbnail or if the exif data holds
   corrupt information about where the thumbnail is stored and JavaPEG does not
   find it by scanning the entire JPEG file or if the stored thumbnail is 
   corrupt, then it is possible to let JavaPEG create a thumbnail to be used by
   JavaPEG. The original JPEG file will not be updated with the created 
   thumbnail.
   
 + It is possible to enable and disable the thumbnail cache that JavaPEG uses
   internally. It is also possible to set the max size (number of thumbnails to
   cache) of the cache and to entirely clear the cache from thumbnails.   
 
 ! If a file was copied incorrect when it was renamed the, rename process log 
   window did incorrectly state that the file was both copied correct and with
   failure.
 
 ! If time and, or date was missing in the Exif data the time and, or date was
   not used from file time stamp even if the configuration was set to do that.
  
 ! JavaPEG did crash as a result of a null pointer exception when a directory
   without read access, for the current user, was browsed in the tree view.
   Bug seen in Windows 7, but is probably existing in any Operating system with
   user access control. 
 
 ! In the thumbnail tooltips the swedish string "Filnamn", (File name) was hard 
   coded.
   
 ! If the keyboard was used to change image in the Image Viewer and the change
   image key was held down, then the change of images did not stop at once when
   the key was released. This has been fixed in the version.  
   
 ~ The possibility to override the application embedded language and help files
   has been removed.  
   
 ~ The progress bar displayed when loading images has been changed from being a
   separate window to be integrated in the thumbnail display area. 
   
 ~ The error message that is displayed if the configuration file is missing or
   corrupt has been improved by not only saying that the file is missing it 
   also says that the file might be corrupt.  
   
 ~ The value of the Exif Picture Width and Exif Picture Height was stripped 
   from any occurrences of non integer characters. In for instance some of the
   Canon cameras the value of any of the above was: "2592 pixels". From now on
   the value is only "2592" 
 
 ~ The length of the Exif parameter: Camera Model was hard coded to a maximum
   of 15 characters. That has been changed to instead being a configurable 
   length. The configuration is made in the configuration GUI. A value of 0 
   (zero) means unlimited length.
  
 ~ The Exif parameter shutter speed has been changed to the Exif parameter
   exposure time, since that is what was meant from the beginning. The
   exposure time parameter gives values which corresponds to them seen in the
   camera during a photo session and the shutter speed values are slightly
   different. See Exif standard for details.
   
 ~ The Exif parameter aperture value has been changed to the Exif parameter
   F-Number, since that is what was meant from the beginning. The
   F-Number parameter gives values which corresponds to them seen in the
   camera during a photo session and the aperture values are slightly
   different. See Exif standard for details.  
    
 2.4 (2009-11-17)
 
 + Possible to create customized help files. Either by overriding an existing 
   language or to create help files for a new language (to match a new not
   embedded language file) 
  
 + Added move to top and bottom buttons for the images in the Image List at the
   VIEW IMAGES tab.
 
 + It is possible to let JavaPEG compress the rotated log files in zip-files.
 
 + A graphical user interface for the configuration parameters has been added.
   This removes the insecure way of manually changing (Although it is still 
   possible if wanted) the parameter values in the conf.xml file.
 
 + For statistical purposes it is possible to let JavaPEG attach the version 
   number to the version update check request made to the version update 
   server. The only information sent is which version of JavaPEG that is making 
   the version update check. In other words this is totally anonymous, no 
   system unique information is sent.
   
 + It is possible (by configuration parameters) to let JavaPEG use the latest 
   modified timestamp for the image files to populate the date and time 
   variables if they are missing in the Exif meta data.  
      
 + A new Image List format has been added. It is from now on possible to export
   image lists supported by the XnView image viewer.
   
   XnView (http://www.xnview.com/)
   
 + An ImageViewer has been added. It is opened from the "VIEW IMAGES" 
   (Previous "CREATE IMAGE LISTS" tab) tab and it will show all the images that
   has been selected and added to the IMAGE LIST The Image Viewer opens in a 
   separate window.
   
 + As a bonus for the fix of the bug described below, with wrong help files 
   (possibly non existing) being loaded there is now support for creating 
   localized help files in the same manner as for the language files.   
   
 ! If the automatic rotation of log file was disabled, then the log was 
   rotated for each entry written to log, resulting in a lot of log files with
   only one log entry in each log file.
   
 ! If a new language file was created (with a new language) then the help file
   management tried to load help files for that language. The solution was to
   load default language help files if desired files does not exist.   
         
 ~ The Language selection GUI has been removed and all settings that was made 
   via that interface has been moved to the new graphical configuration 
   interface.
   
 ~ The image loading (When selecting a directory in the tree structure to the
   left) has been improved by reducing the initial lag when a directory was 
   selected. The lag was linear to the amount of images in selected directory
  
 ~ In Windows Vista, Windows 7 or other Operating system that restricts file
   access according to user rights there where problems with JavaPEG. All files
   and directories that are dynamic have been moved from the application 
   installation directory to a directory named 
   "javapeg-<JAVEPEG_VERSION_NUMBER>" in the home directory for the user that
   starts JavaPEG. For instance: C:\Users\Fredrik\javapeg-2.4 in a Windows 
   Vista or Windows 7 environment.   
      
 2.3 (2009-08-03)
 
 ! The embedded download functionality which downloads the latest version 
   JavaPEG was broken and still is in all prior versions to this version, which
   supports version check against a version server (2.1 & 2.2). The reason for 
   this bug to arise was that SourceForge made changes to the format of the URL
   to the released files. And unfortunately JavaPEG of earlier versions was not
   generic enough to handle that change.
 
 2.2 (2009-08-02)
 
 + Spanish translation added. The translation was performed by: Angel Bueno
 
 + A new variable has been added to the set of variables. The new variable 
   gives access to the original file name. So by using this new variable in the
   file name template the original file name except the suffix will be inserted
   at the position of the variable. The code for this new variable was written
   by: Angel Bueno
 
 + A new mode to the application has been added. It is from now on possible to
   create images lists to be used in external applications. Lists compatible 
   with the following applications are possible to create:
   
   PolyView  (http://www.polybytes.com/)
   IrfanView (http://www.irfanview.com/)
   
   It is also possible to save lists in JavaPEG format which later on can be
   exported to a supported 3rd party list format or having images added or 
   removed.
 
 + Status bar added to the bottom of the GUI, displaying selected directory,
   number of images in selected directory and number of columns and rows in the 
   thumbnail grid.
 
 + Detailed meta data information is available in a panel next to the 
   thumbnails panel for each image shown. The meta data for a specific image
   is shown when the thumbnail is clicked.  
 
 + At application start the Main GUI sets it size to the size it had when it 
   was shut down the the previous time. 
 
 ~ Main GUI is from now on resizable and the layout is handled by layout 
   managers.
   
 ~ The file chooser GUI, as a separate window, has been replaced by an always
   visible and accessible tree structure in the main GUI.
   
 ! The progress bar for loading thumbnails was not always centered to the main
   GUI window when thumbnails was loading.        

 2.1 (2009-05-21)
 
 + Detailed information about the JPEG rename process, process of copy any non
   JPEG files and the file integrity after the rename and file copy to the
   rename process progress window. 

 + JavaPEG can from now, do an optional (configurable) version check at 
   application start. It does it against an version server. If there is a new
   version available, the changes for that version compared to the current used
   version is presented. It is also possible to download the new version 
   through JavaPEG 
     
 + Validation of the content in any existing external layout.xml file against
   a schema. 
   
 ! Fixed the problems with the accelerator keys for menu items and buttons. 
   The where collisions between globally defined accelerator keys and JavaPEG
   defined.
   
 ~ GUI behavior changed after a rename process has finished. It was changed 
   from being cleared from all inputs, as it is at application start, to not be
   cleared at all.  

 2.0 (2009-05-05)

 Version 2.0 of JavaPEG is more or less a complete rewrite compared to the 1.x
 versions. Despite this the concept is still the same: A simple to use and 
 secure tool to rename images created by a digital camera.

 The application still need a path to a source directory with images. When the
 source directory has been chosen the destination directory must be selected. 
 After this a file name and sub directory template must be provided. As a last 
 step before the actual rename process can begin, it is possible to select 
 whether a thumb nail overview shall be created or not.

 A major difference with this version compared to the 1.x versions it that this 
 version only supports renaming of copied image files. The reason for this is 
 to minimize the risk for data losses.

 + The file chooser used to find the directory containing the images that shall 
   be renamed will show thumb nail versions of the images in the selected 
   directory. This will ease up the work with finding the images to rename.

 + Thumb nails will be shown in the main application window, when a directory 
   with images has been selected in the file chooser and the Ok button has been 
   clicked. 

 + There is an instant preview of the resulting file names when the templates 
   for either the file name or the sub directory has been changed.

 + There is an instant errormessage shown if an illegal variable or an illegal 
   character is used in the templates or the maximum path length has been 
   exceeded for the resulting file names in the selected destination directory.

 + Before the rename process starts there is a validation process which makes 
   sure that: all input is valid, that maximum path length has not been 
   exceeded, that the sub directory does not exist in the destination 
   directory, that there is enough space to store the copied files in the 
   destination directory and that it is possible to create all the files in the 
   destination directory that exists in the source directory.

 + A validation takes place after the rename process has finished. This 
   validation will check that all files that has been copied from the source 
   directory to the destination directory has been given the correct name and 
   has the exact same content.

 + Under the rename process, there is a status window showing the progress of 
   the rename process.

 + It is possible to change the look and layout of the optional thumb nail 
   overview.

 + For potential error that can occur, there is logging to file.


 1.01 (2007-02-02)

 ! Version 1.01 of JavaPEG is a pure bug fix version. It corrects incorrect 
   behavior in rename engine and a problem with wrong error message.

   The program hang if a dot was present as first or last character in file 
   name template or sub folder name template. The exact same problem was also 
   present if there was white spaces first or last in templates. Besides from 
   this there was a correction of two error messages which was mixed up in the 
   English language file.


 1.0 (2006-11-27)

 + Version 1.0 of JavaPEG has the possibility to rename image files of type jpeg 
   if they have embedded Exif-information.

   The program will rename the files according to a, in the field 
   "FILENAME TEMPLATE", by the user, given template. There is a couple of 
   variables available and they can be found in the window with heading 
   "VARABLES".

   The user has the possibility to choose whether to rename the original files 
   or copies of them, which will be saved in the same directory as original 
   files, or in another directory or in a sub directory in another directory 
   than original directory. It is possible to give the sub directory a name in 
   the same way as the files, in other words: by using variables. 

   Before rename process starts the user has the possibility to choose whether 
   JavaPEG shall create any thumb nails of renamed images. If there will be any 
   thumb nails there will also be a HTML file created, which will show all the 
   created thumb nails and the thumb nails will link to the full size images. 

   As last option, it is also possible to instruct the program to open 
   destination directory after finished rename process.
 